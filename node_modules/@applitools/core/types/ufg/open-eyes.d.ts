import type { DriverTarget, Eyes, OpenSettings } from './types';
import type { Core as BaseCore, Eyes as BaseEyes } from '@applitools/core-base';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from '@applitools/driver';
import { type UFGClient } from '@applitools/ufg-client';
type Options<TSpec extends SpecType> = {
    core: BaseCore;
    client?: UFGClient;
    spec?: SpecDriver<TSpec>;
    logger: Logger;
};
export declare function makeOpenEyes<TSpec extends SpecType>({ core, client, spec, logger: defaultLogger }: Options<TSpec>): ({ target, settings, eyes, logger, }: {
    target?: DriverTarget<TSpec> | undefined;
    settings: OpenSettings;
    eyes?: BaseEyes<import("@applitools/core-base").ImageTarget>[] | undefined;
    logger?: Logger | undefined;
}) => Promise<Eyes<TSpec>>;
export {};
