/// <reference types="node" />
import net from 'net';
import { ISocksServer, ProxyServers, SetProxyServerOptions, Socks5ProxyOptions } from '../types';
/**
 * The following RFCs may be useful as background:
 *
 * https://www.ietf.org/rfc/rfc1928.txt - NO_AUTH SOCKS5
 * https://www.ietf.org/rfc/rfc1929.txt - USERNAME/PASSWORD SOCKS5
 *
 **/
export declare class SocksServer implements ISocksServer {
    private server;
    private options;
    private activeSessions;
    private destinationSockets;
    private syncDestinationSocketInterval;
    constructor(options: Socks5ProxyOptions);
    on: (event: string, listener: (...args: any[]) => void) => net.Server;
    listen: (...args: any[]) => net.Server;
    close: (...args: any[]) => net.Server;
    getConnections: (cb: (error: Error | null, count: number) => void) => void;
    setProxyServer: ({ address, port, shouldUseProxy }: SetProxyServerOptions) => void;
    setProxyServers: (proxyServers: ProxyServers) => void;
    getProxyServers: () => import("../types/utils").ProxyPoolOptions | undefined;
}
export declare function createSocks5ProxyServer(options?: Socks5ProxyOptions): SocksServer;
export * as EVENTS from './events';
//# sourceMappingURL=index.d.ts.map